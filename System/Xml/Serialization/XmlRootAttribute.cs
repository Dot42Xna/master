// Copyright (C) 2014 dot42
//
// Original filename: XmlRootAttribute.cs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
namespace System.Xml.Serialization
{
    /// <summary>
    /// Controls XML serialization of the attribute target as an XML root element.
    /// </summary>
    [AttributeUsageAttribute(AttributeTargets.Class|AttributeTargets.Struct|AttributeTargets.Enum|AttributeTargets.Interface|AttributeTargets.ReturnValue)]
    public class XmlRootAttribute : Attribute
    {
        private string elementName;

        /// <summary>
        /// Default ctor
        /// </summary>
        public XmlRootAttribute()
        {            
        }

        /// <summary>
        /// Element name ctor
        /// </summary>
        public XmlRootAttribute(string elementName)
        {
            this.elementName = elementName;
        }

        /// <summary>
        /// Gets/sets the name of the XML element.
        /// </summary>
        public string ElementName
        {
            get { return elementName ?? string.Empty; }
            set { elementName = value; }
        }

        /// <summary>
        /// Gets/sets the namespace of the XML attribute.
        /// </summary>
        public string Namespace { get; set; }

        /// <summary>
        /// Gets/sets the XSD data type of the XML element generated by the XmlSerializer.
        /// </summary>
        public string DataType { get; set; }

        /// <summary>
        /// Gets/sets whether the XmlSerializer must serialize a member that is set to null as an empty tag with the xsi:nil attribute set to true.
        /// </summary>
        public bool IsNullable { get; set; }
    }
}

